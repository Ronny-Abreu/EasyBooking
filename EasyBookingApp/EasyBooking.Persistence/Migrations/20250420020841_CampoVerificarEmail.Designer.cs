// <auto-generated />
using System;
using EasyBooking.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyBooking.Persistence.Migrations
{
    [DbContext(typeof(EasyBookingDbContext))]
    [Migration("20250420020841_CampoVerificarEmail")]
    partial class CampoVerificarEmail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyBooking.Domain.Entities.HotelImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelImagenes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            EsPrincipal = true,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7440),
                            HotelId = 1,
                            Orden = 1,
                            Titulo = "Vista principal",
                            Url = "/img/hotels/hotel1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7442),
                            HotelId = 1,
                            Orden = 2,
                            Titulo = "Habitación",
                            Url = "/img/hotels/hotel1_2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7443),
                            HotelId = 1,
                            Orden = 3,
                            Titulo = "Piscina",
                            Url = "/img/hotels/hotel1_3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            EsPrincipal = true,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7445),
                            HotelId = 2,
                            Orden = 1,
                            Titulo = "Vista principal",
                            Url = "/img/hotels/hotel2.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7451),
                            HotelId = 2,
                            Orden = 2,
                            Titulo = "Habitación",
                            Url = "/img/hotels/hotel2_2.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            EsPrincipal = true,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7452),
                            HotelId = 3,
                            Orden = 1,
                            Titulo = "Vista principal",
                            Url = "/img/hotels/hotel3.jpg"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7454),
                            HotelId = 3,
                            Orden = 2,
                            Titulo = "Restaurante",
                            Url = "/img/hotels/hotel3_2.jpg"
                        });
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.PaqueteImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteId");

                    b.ToTable("PaqueteImagenes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            EsPrincipal = true,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7509),
                            Orden = 1,
                            PaqueteId = 1,
                            Titulo = "Vista principal",
                            Url = "/img/packages/package1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7511),
                            Orden = 2,
                            PaqueteId = 1,
                            Titulo = "Cenote",
                            Url = "/img/packages/package1_2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7512),
                            Orden = 3,
                            PaqueteId = 1,
                            Titulo = "Playa",
                            Url = "/img/packages/package1_3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            EsPrincipal = true,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7513),
                            Orden = 1,
                            PaqueteId = 2,
                            Titulo = "Vista principal",
                            Url = "/img/packages/package2.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7514),
                            Orden = 2,
                            PaqueteId = 2,
                            Titulo = "Cusco",
                            Url = "/img/packages/package2_2.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            EsPrincipal = true,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7516),
                            Orden = 1,
                            PaqueteId = 3,
                            Titulo = "Vista principal",
                            Url = "/img/packages/package3.jpg"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            EsPrincipal = false,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7517),
                            Orden = 2,
                            PaqueteId = 3,
                            Titulo = "Resort",
                            Url = "/img/packages/package3_2.jpg"
                        });
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.PaqueteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incluye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Itinerario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitud")
                        .HasColumnType("float");

                    b.Property<double?>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("NoIncluye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PaquetesTuristicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Calificacion = 5,
                            Descripcion = "Descubre las maravillas de la Riviera Maya con este paquete que incluye visitas a cenotes, zonas arqueológicas y playas paradisíacas.",
                            Destino = "Riviera Maya",
                            Duracion = 7,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7484),
                            ImagenUrl = "/img/packages/package1.jpg",
                            Incluye = "Hospedaje en hotel 5 estrellas, Desayunos, Traslados, Entradas a zonas arqueológicas, Tour a cenotes",
                            Itinerario = "Día 1: Llegada y check-in, Día 2: Visita a Tulum, Día 3: Cenotes, Día 4: Playa del Carmen, Día 5: Xcaret, Día 6: Día libre, Día 7: Check-out y despedida",
                            Latitud = 20.6296,
                            Longitud = -87.073899999999995,
                            NoIncluye = "Vuelos, Comidas y cenas, Gastos personales",
                            Nombre = "Aventura en Riviera Maya",
                            Pais = "México",
                            Precio = 1200.00m
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Calificacion = 4,
                            Descripcion = "Explora la antigua ciudad inca de Machu Picchu y descubre la rica cultura peruana en este fascinante viaje.",
                            Destino = "Cusco",
                            Duracion = 5,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7491),
                            ImagenUrl = "/img/packages/package2.jpg",
                            Incluye = "Hospedaje, Desayunos, Guía turístico, Entradas a Machu Picchu, Tren a Aguas Calientes",
                            Itinerario = "Día 1: Llegada a Cusco, Día 2: City tour en Cusco, Día 3: Valle Sagrado, Día 4: Machu Picchu, Día 5: Regreso",
                            Latitud = -13.1631,
                            Longitud = -72.545000000000002,
                            NoIncluye = "Vuelos, Almuerzos y cenas, Propinas",
                            Nombre = "Maravillas Machu Picchu",
                            Pais = "Perú",
                            Precio = 950.00m
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Calificacion = 5,
                            Descripcion = "Disfruta de las mejores playas del Caribe en este paquete todo incluido en Punta Cana.",
                            Destino = "Punta Cana",
                            Duracion = 4,
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7493),
                            ImagenUrl = "/img/packages/package3.jpg",
                            Incluye = "Hospedaje todo incluido, Traslados, Acceso a todas las instalaciones del resort",
                            Itinerario = "Día 1: Llegada y check-in, Día 2-3: Disfrute de playa y actividades del resort, Día 4: Check-out",
                            Latitud = 18.560099999999998,
                            Longitud = -68.372500000000002,
                            NoIncluye = "Vuelos, Excursiones adicionales, Servicios de spa",
                            Nombre = "Escapada a Punta Cana",
                            Pais = "República Dominicana",
                            Precio = 850.00m
                        });
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroHuespedes")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenciaPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.ReservaPaquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroPersonas")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenciaPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ReservasPaquetes");
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailValidado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitud")
                        .HasColumnType("float");

                    b.Property<double?>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioPorNoche")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Servicios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hoteles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Calificacion = 5,
                            Ciudad = "Cancún",
                            Descripcion = "Un lujoso hotel con vistas al mar",
                            Direccion = "Calle Principal 123",
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7293),
                            ImagenUrl = "/img/hotels/hotel1.jpg",
                            Nombre = "Hotel Paraíso",
                            Pais = "México",
                            PrecioPorNoche = 150.00m,
                            Servicios = ""
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Calificacion = 4,
                            Ciudad = "Bariloche",
                            Descripcion = "Disfruta de la naturaleza en nuestro hotel de montaña",
                            Direccion = "Avenida Sierra 456",
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7308),
                            ImagenUrl = "/img/hotels/hotel2.jpg",
                            Nombre = "Hotel Montaña",
                            Pais = "Argentina",
                            PrecioPorNoche = 120.00m,
                            Servicios = ""
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Calificacion = 4,
                            Ciudad = "Madrid",
                            Descripcion = "Ubicado en el corazón de la ciudad",
                            Direccion = "Plaza Mayor 789",
                            FechaCreacion = new DateTime(2025, 4, 19, 22, 8, 40, 979, DateTimeKind.Local).AddTicks(7310),
                            ImagenUrl = "/img/hotels/hotel3.jpg",
                            Nombre = "Hotel Céntrico",
                            Pais = "España",
                            PrecioPorNoche = 180.00m,
                            Servicios = ""
                        });
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.HotelImagen", b =>
                {
                    b.HasOne("Hotel", "Hotel")
                        .WithMany("Imagenes")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.PaqueteImagen", b =>
                {
                    b.HasOne("EasyBooking.Domain.Entities.PaqueteTuristico", "Paquete")
                        .WithMany("Imagenes")
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("Hotel", "Hotel")
                        .WithMany("Reservas")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyBooking.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.ReservaPaquete", b =>
                {
                    b.HasOne("EasyBooking.Domain.Entities.PaqueteTuristico", "Paquete")
                        .WithMany("Reservas")
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyBooking.Domain.Entities.Usuario", "Usuario")
                        .WithMany("ReservasPaquetes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.PaqueteTuristico", b =>
                {
                    b.Navigation("Imagenes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("EasyBooking.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("ReservasPaquetes");
                });

            modelBuilder.Entity("Hotel", b =>
                {
                    b.Navigation("Imagenes");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
